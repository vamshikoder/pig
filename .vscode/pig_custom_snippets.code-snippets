{
	"custom scaffold": {
		"prefix": "pcustomscaffold",
		"body": [
			" ///don't forget to import [global_utility_widgets.dart]",
			" const PigCustomScaffold(",
			"      title: '$1', // remove this line if you don't need a title",
			"      /// similar to [AppBar] in [Scaffold]",
			"      head: [",
			"        //your AppBar Widgets",
			"      ],",
			"",
			"      /// similar to [body] in [Scaffold]",
			"      body: Text('Body Code'),",
			"    );",
		],
		"description": "creates the CustomScaffold Widget",
		"scope": "dart"
	},
	"sheet": {
		"prefix": "psheet",
		"body": [
			"PigSheet(",
			"///custom [sheet] designed for [PIG]",
			"///don't forget to import [config.dart]",
			" title: '$1', //remove this line if you don't require title",
			" height: rSHeight(100),",
			" child: const Text('sheet child'),",
			"),",
		],
		"description": "creates the sheet",
		"scope": "dart"
	},
	"pigdrawer": {
		"prefix": "pigdrawer",
		"body": [
			"///Don't forget to import [pigdrawer.dart] and [config.dart]",
			"class $1 extends StatefulWidget {",
			"  @override",
			"  _$1State createState() => _$1State();",
			"}",
			"",
			"class _$1State extends State<$1> with SingleTickerProviderStateMixin {",
			"  late PigDrawerController _controller;",
			"  @override",
			"  void initState() {",
			"    super.initState();",
			"    _controller = PigDrawerController(vsync: this)",
			"      ..addListener(() {",
			"        setState(() {});",
			"      });",
			"  }",
			"",
			"  @override",
			"  void dispose() {",
			"    _controller.dispose();",
			"    super.dispose();",
			"  }",
			"",
			"  @override",
			"  Widget build(BuildContext context) {",
			"    return Material(",
			"      child: PigDrawer(",
			"          controller: _controller, menu: $1Menu(), scaffold: $1Scaffold()),",
			"    );",
			"  }",
			"}",
			"",
			"///[PigDrawer] which wraps around [$1] and [Menu]",
			"",
			"///implement your [$1] below.",
			"///[recommended] it is good to move [$1Scaffold] to different [file]",
			"class $1Scaffold extends ConsumerWidget {",
			"  @override",
			"  Widget build(BuildContext context, ScopedReader watch) {",
			"    /// remove [Scaffold] use [CustomScaffold] instead",
			"    return const Scaffold(",
			"      body: Center(",
			"        child: Heading('$1 Scaffold'), //write your child i.e., the page",
			"      ),",
			"    );",
			"  }",
			"}",
			"",
			"///implement your [Menu] below",
			"///[recommended] it is good to move [$1Menu] to different [file]",
			"class $1Menu extends ConsumerWidget {",
			"  @override",
			"  Widget build(BuildContext context, ScopedReader watch) {",
			"    /// remove [Scaffold] use [CustomScaffold] instead",
			"    return const Scaffold(",
			"      body: Heading1('$1 Menu'), // write your menu code here",
			"    );",
			"  }",
			"}",
		],
		"scope": "dart"
	},
	"stacked sheets": {
		"prefix": "pstackedsheets",
		"body": [
			" ///don't forget to import [stacked_sheets.dart]",
			"          const PigStackedSheets(",
			"            title1: '$1',",
			"            title2: '$2',",
			"            child1:  SubText('hello from title1'),",
			"            child2:  SubText('hello from title2'),",
			"            ///[heightFactor] must be [0.80] if is used as [body]",
			"            ///if there is any other [Widget] above [StackedSheets] configure [heightFactor] accordingly",
			"            heightFactor: 0.50,",
			"          ),",
		],
		"scope": "dart"
	},
	"Pig ConsumerWidget": {
		"prefix": "stless",
		"body": [
			"///import [flutter_riverpod.dart]",
			"class $1 extends ConsumerWidget {",
			"@override",
			"Widget build(BuildContext context, ScopedReader watch) {",
			"    return $2;",
			"  }",
			"}",
		],
		"scope": "dart"
	},
	"flutter column": {
		"prefix": "fcol",
		"body": [
			"    Column(",
			"      children: [$1],",
			"    )$2"
		],
		"scope": "dart"
	},
	"flutter row": {
		"prefix": "frow",
		"body": [
			"    Row(",
			"      children: [$1],",
			"    )$2"
		],
		"scope": "dart"
	},
	"flutter stack": {
		"prefix": "fsta",
		"body": [
			"    Stack(",
			"      children: [$1],",
			"    )$2"
		],
		"scope": "dart"
	},
	"stateProvider": {
		"prefix": "spro",
		"body": [
			"final $1StateProvider = StateProvider<$2>((ref) {",
			"  return $3;",
			"});"
		],
		"scope": "dart"
	},
	"stateNotifierProvider": {
		"prefix": "snpro",
		"body": [
			"class $1Notifier extends StateNotifier<$2> {",
			"  $1Notifier() : super($3);",
			" ",
			"}",
			" ",
			"final $4 $1StateProvider =",
			"    StateNotifierProvider<$1Notifier>((ref) {",
			"  return $1Notifier();",
			"});",
		],
		"scope": "dart"
	},
	"create a watch for state provider": {
		"prefix": "wpro",
		"body": "final $1State = watch($1StateProvider).state;"
	},
	"create a watch for state Notifier provider": {
		"prefix": "wnpro",
		"body": "final $1State = watch($1StateProvider.state);"
	},
	"import material.dart": {
		"prefix": "impm",
		"body": "import 'package:flutter/material.dart';",
		"scope": "dart"
	},
	"import flutter_riverpod.dart": {
		"prefix": "impri",
		"body": "import 'package:flutter_riverpod/flutter_riverpod.dart';",
		"scope": "dart"
	},
	"import route_manager.dart": {
		"prefix": "impro",
		"body": "import 'package:get/route_manager.dart';",
		"scope": "dart"
	}
}